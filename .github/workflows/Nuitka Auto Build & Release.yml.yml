name: Build & Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_ARCH: 'x64'
  OS_ENV: 'Windows_x64'  # 其他环境可改为 Linux_x64 等

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ env.BUILD_ARCH }}

      - name: Extract Version
        id: version
        shell: powershell
        run: |
          # 使用绝对路径确保模块导入
          $VERSION = python -c "import sys, os, ast; sys.path.insert(0, os.path.join(os.getcwd(), 'src')); from main import VERSION; print(VERSION)"
          echo "VERSION=$VERSION" >> $env:GITHUB_ENV
          Write-Output "Extracted Version: $VERSION"

      - name: Generate Output Name
        run: |
          # 生成标准化文件名
          PY_VER=$(python -c "import sys; print(f'py{sys.version_info.major}{sys.version_info.minor}')")
          echo "OUTPUT_NAME=TAS-${{ env.VERSION }}_${{ env.OS_ENV }}_${PY_VER}.exe" >> $GITHUB_ENV

      - name: Compile with Nuitka
        run: |
          python -m nuitka --mingw64 --assume-yes-for-downloads --show-progress --show-memory --standalone --onefile --windows-console-mode=disable --plugin-enable=pyside6 --output-filename=${{ env.OUTPUT_NAME }} --output-dir=output --remove-output --lto=yes --jobs=8 .\launcher.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: dist/${{ env.OUTPUT_NAME }}
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build.outputs.OUTPUT_NAME }}
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: "TAS ${{ env.VERSION }}"
          files: |
            release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}