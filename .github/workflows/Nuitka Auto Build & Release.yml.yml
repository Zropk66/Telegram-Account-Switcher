name: Windows x64 Nuitka Build & Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'
  BUILD_ARCH: 'x64'
  CACHE_KEY: ${{ github.sha }}

permissions:
  contents: write  # 必需的上传权限
  actions: read
  packages: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\pip\Cache
            C:\msys64
          key: ${{ runner.os }}-build-${{ env.CACHE_KEY }}

      - name: Setup Python (x64)
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.BUILD_ARCH }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate Build Metadata
        id: version
        run: |
          $DATE = Get-Date -Format "yyyyMMdd-HHmm"
          $COMMIT_SHA = git rev-parse --short HEAD
          $PY_VER = python -c "import sys; print(f'py{sys.version_info.major}{sys.version_info.minor}')"
          echo "TAG_NAME=build-${{ env.CACHE_KEY }}" >> $env:GITHUB_ENV
          echo "OUTPUT_NAME=TAS_${DATE}_${COMMIT_SHA}_Windows_${{ env.BUILD_ARCH }}_${PY_VER}.exe" >> $env:GITHUB_ENV

      - name: Compile with Nuitka
        env:
          CC: 'C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin\gcc.exe'
        run: echo "Yes" | python -m nuitka --mingw64 --show-progress --show-memory --standalone --onefile --windows-console-mode=disable --plugin-enable=pyside6 --output-dir=output --remove-output --lto=yes --jobs=8 .\launcher.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/${{ env.OUTPUT_NAME }}
          retention-days: 3

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "TAS Build ${{ env.TAG_NAME }}"
          files: |
            release/*
          draft: false
          prerelease: true